events {
    worker_connections 1024;
}

http {
    upstream auth_service {
        server host.docker.internal:3001;
        server 172.17.0.1:3001; # For Linux, if Docker uses a different bridge network
    }

    upstream chat_gpt {
        server host.docker.internal:3002;
        # server 172.17.0.1:3002;
    }

    upstream document_keeper {
        server host.docker.internal:3003;
        # server 172.17.0.1:3003;
    }

    upstream evaluation_service {
        server host.docker.internal:3004;
        # server 172.17.0.1:3004;
    }

    upstream frontend {
        server host.docker.internal:5173;
        # server 172.17.0.1:5173;
    }
    
    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://frontend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Original-URI $request_uri;
        }

        location /auth/ {
            proxy_pass http://auth_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Original-URI $request_uri;
        }

        location /chat-gpt/ {
            proxy_pass http://chat_gpt/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Original-URI $request_uri;
        }

        location /document-keeper/ {
            proxy_pass http://document_keeper/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Original-URI $request_uri;
        }

        location /evaluation/ {
            proxy_pass http://evaluation_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Original-URI $request_uri;
        }
    }
}